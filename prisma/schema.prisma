datasource db {
  provider = "postgresql"
  url      = "postgresql://TalkWeather:npg_KHtwTx8qz7Du@ep-proud-dew-a8uosi67-pooler.eastus2.azure.neon.tech/TalkWeather?sslmode=require"
}

generator client {
  provider = "prisma-client-js"
}

model FollowerRelation {
  follower  String
  following String
  @@id([follower, following])

  @@map("follower_relation")
}

model Like {
  userId   String
  postId   Int
  type     String?
  @@id([userId, postId])

  @@map("likes")
}

model Notification {
  id        Int      @id @default(autoincrement())
  type      String
  notifier  String
  notified  String
  read      Boolean  @default(false)
  createdAt DateTime @default(now())
  postId    Int?

  @@map("notifications")
}

model Post {
  id          Int      @id @default(autoincrement())
  userId      String
  parentNanoid String?
  nanoid      String
  createdAt   DateTime @default(now())
  deleted     Boolean  @default(false)
  edited      Boolean  @default(false)
  content     String

  @@map("posts")
}

model Repost {
  userId    String
  postId    Int
  createdAt DateTime @default(now())

  @@id([userId, postId])
  @@map("reposts")
}

model Subscription {
  userId      String
  subscription Json

  @@id([userId]) // Composite primary key or you can use @unique for individual fields
  @@map("subscriptions") // Maps the table name to the model
}

model User {
  id       String @id
  name     String
  bio      String?
  username String?
  email    String
  image    String

  @@map("users")
}
